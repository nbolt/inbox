#!/usr/bin/env python

import click
from functools import partial
import json
import sys

from inbox.status.sync import get_sync_status


def print_sync_status_stats(accounts):
    num_accounts = len(accounts)
    num_alive_accounts = 0

    for account_id in accounts:
        num_alive_accounts = num_alive_accounts + accounts[account_id][0]

    num_dead_accounts = num_accounts - num_alive_accounts

    return {'accounts': num_accounts,
            'alive_accounts': num_alive_accounts,
            'dead_accounts': num_dead_accounts}


def print_sync_status(accounts, verbose):
    summary = {'verbose': []}

    for account_id in accounts:
        account_is_alive, provider_name, folders = accounts[account_id]

        if account_is_alive and not verbose:
            continue

        account_summary = {'account': account_id,
                           'provider_name': provider_name,
                           'folders': []}

        for folder_id in folders:
            folder_is_alive, folder_name, devices = folders[folder_id]

            if folder_is_alive and not verbose:
                continue

            folder_summary = {'id': folder_id,
                              'name': folder_name,
                              'devices': []}

            for device_id in devices:
                if devices[device_id]['alive'] and not verbose:
                    continue
                device_summary = {'id': device_id}
                device_summary.update({
                    k: str(v)
                    for k, v in devices[device_id].iteritems() if v is not None
                } or {})
                folder_summary['devices'].append(device_summary)

            account_summary['folders'].append(folder_summary)

        summary['verbose'].append(account_summary)

    return summary


@click.command()
@click.option('--hostname', type=str)
@click.option('--port', type=int, default=6379)
@click.option('--database', type=click.IntRange(1, 15), default=1)
@click.option('--account-id', type=int)
@click.option('--pretty', is_flag=True)
@click.option('--verbose', is_flag=True)
def main(hostname, port, database, account_id, pretty, verbose):
    if hostname:
        accounts = get_sync_status(hostname=hostname,
                                   port=port,
                                   database=database,
                                   account_id=account_id)
    else:
        accounts = get_sync_status(account_id=account_id)

    if not pretty:
        json_dumps = partial(json.dumps, sort_keys=True)
    else:
        json_dumps = partial(json.dumps, sort_keys=True, indent=2)

    summary = print_sync_status_stats(accounts)
    if summary['dead_accounts'] == 0 and not verbose:
        print json_dumps(summary)
        return
    summary.update(print_sync_status(accounts, verbose))
    print json_dumps(summary)
    sys.exit(2)


if __name__ == '__main__':
    main()
