Title: Files

The files endpoint is used to manage data attached to messages. If you'd like to add an attachment to a draft, it must first be uploaded to receive the file's id. This endpoint is also used for listing and downloading existing files contained in a user's mail data.

# Retrieving a specific file's metadata

```
:::xml
GET https://api.inboxapp.com/n/<namespace_id>/files/<file_id>
```

**Response:**

```
:::json
{
    "id": "conefgqnnsvqlj64iu0lvsb7g",
    "object": "file",
    "namespace_id": "awa6ltos76vz5hvphkp8k17nt",
    "filename": "House-Blueprints.zip",
    "size": 3145728,
    "content-type": "application/zip",
    "message_ids": ["152ev3uktfrtk3y2subs4i9mn"],
}
```

# Retrieving many files

This endpoint supports [filters](#filters), which allow you to fetch multiple files matching specific critera. Inline attachments are not included in results.

As an example, the following will return all zip files. Note the `/` character in the content-type has been replaced by the [percent-encoded](http://en.wikipedia.org/wiki/Percent-encoding) value `%2F`.

```
:::xml
GET https://api.inboxapp.com/n/<namespace_id>/files?content_type=application%2Fzip
```

## Options

* **`limit`** (integer) The maximum number of results to return. Defaults to 100 for performance. If `limit` is set too high, a request may fail with HTTP status code 400 to prevent excessively large response bodies.

* **`offset`** (integer) Zero-based offset; use with `limit` for pagination of results.

* **`message_id`** Return only files that are attached to a particular message.

* **`file_id`** Return the file with the given file_id

* **`filename`** (string) Return only files that match the given filename

* **`is_attachment`** (bool) either `true` or `false` specifying if the results should be filtered to files that are attachments or not.

* **`content_type`** (string) Return only files with this content-type. Note the `/` character in the content-type has been replaced by the [percent-encoded](http://en.wikipedia.org/wiki/Percent-encoding) value `%2F`.



## A note on content-types

In the spirit of transcending [MIME](http://www.ietf.org/rfc/rfc2045.txt), Inbox only references content-types, and not mimetypes. The mimetype of a downloaded attachment is referred to as the content-type. All files are encoded either as UTF-8 or binary.


# Downloading files

Files can be downloaded by appending `/download` to the URI. The body response will include the filename.

```
:::xml
GET https://api.inboxapp.com/n/<namespace_id>/files/<file_id>/download
```


# Uploading a new file

```
:::xml
POST https://api.inboxapp.com/n/<namespace_id>/files
```


This endpoint is used to transfer files to Inbox, which must be done before adding them to a draft message. Data should be sent as multipart-form data with a single file field named `file`. An example of a correct request is shown below. Rather than using this endpoint directly, you may want to consider using one of the Inbox SDKs, which internally handle native data types and build the form request.

```
:::http
POST https://api.inboxapp.com/n/<namespace_id>/files HTTP/1.1
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------41184676334
Content-Length: 29278

-----------------------------41184676334
Content-Disposition: form-data; name="file"; filename="GrandCanyon.jpg"
Content-Type: image/jpeg

<<<Binary data here>>>
```

A successful upload will return an array with a single file object. This object's ID may be added to subsequent [draft updates](#drafts) to attach the file to a draft before sending.


**Sample Response:**

```
:::json
[
    {
        "content_type": "image/jpeg",
            "id": "3f7d6reg1k7hc2umqkz8gcfmo",
            "namespace_id": "agud8k5kr8tmnm8wg4y6appw4",
            "object": "file",
            "size": 29278
    }
]
```
